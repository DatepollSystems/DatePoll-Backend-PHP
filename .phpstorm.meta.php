<?php
// @formatter:off

namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\Illuminate\Container\Container::makeWith(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\App::get(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\App::make(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\App::makeWith(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\app(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\resolve(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));
    override(\Psr\Container\ContainerInterface::get(0), map([
      '' => '@',
      'App\Repositories\Broadcast\BroadcastAttachment\IBroadcastAttachmentRepository' => \App\Repositories\Broadcast\BroadcastAttachment\BroadcastAttachmentRepository::class,
      'App\Repositories\Broadcast\BroadcastDraft\IBroadcastDraftRepository' => \App\Repositories\Broadcast\BroadcastDraft\BroadcastDraftRepository::class,
      'App\Repositories\Broadcast\Broadcast\IBroadcastRepository' => \App\Repositories\Broadcast\Broadcast\BroadcastRepository::class,
      'App\Repositories\Cinema\MovieBooking\IMovieBookingRepository' => \App\Repositories\Cinema\MovieBooking\MovieBookingRepository::class,
      'App\Repositories\Cinema\MovieWorker\IMovieWorkerRepository' => \App\Repositories\Cinema\MovieWorker\MovieWorkerRepository::class,
      'App\Repositories\Cinema\Movie\IMovieRepository' => \App\Repositories\Cinema\Movie\MovieRepository::class,
      'App\Repositories\Event\EventDate\IEventDateRepository' => \App\Repositories\Event\EventDate\EventDateRepository::class,
      'App\Repositories\Event\EventDecision\IEventDecisionRepository' => \App\Repositories\Event\EventDecision\EventDecisionRepository::class,
      'App\Repositories\Event\EventStandardDecision\IEventStandardDecisionRepository' => \App\Repositories\Event\EventStandardDecision\EventStandardDecisionRepository::class,
      'App\Repositories\Event\EventStandardLocation\IEventStandardLocationRepository' => \App\Repositories\Event\EventStandardLocation\EventStandardLocationRepository::class,
      'App\Repositories\Event\Event\IEventRepository' => \App\Repositories\Event\Event\EventRepository::class,
      'App\Repositories\Group\Group\IGroupRepository' => \App\Repositories\Group\Group\GroupRepository::class,
      'App\Repositories\Group\Subgroup\ISubgroupRepository' => \App\Repositories\Group\Subgroup\SubgroupRepository::class,
      'App\Repositories\SeatReservation\Place\IPlaceRepository' => \App\Repositories\SeatReservation\Place\PlaceRepository::class,
      'App\Repositories\SeatReservation\UserSeatReservation\IUserSeatReservationRepository' => \App\Repositories\SeatReservation\UserSeatReservation\UserSeatReservationRepository::class,
      'App\Repositories\System\DatePollServer\IDatePollServerRepository' => \App\Repositories\System\DatePollServer\DatePollServerRepository::class,
      'App\Repositories\System\Job\IJobRepository' => \App\Repositories\System\Job\JobRepository::class,
      'App\Repositories\System\Log\ILogRepository' => \App\Repositories\System\Log\LogRepository::class,
      'App\Repositories\System\Setting\ISettingRepository' => \App\Repositories\System\Setting\SettingRepository::class,
      'App\Repositories\User\DeletedUser\IDeletedUserRepository' => \App\Repositories\User\DeletedUser\DeletedUserRepository::class,
      'App\Repositories\User\UserChange\IUserChangeRepository' => \App\Repositories\User\UserChange\UserChangeRepository::class,
      'App\Repositories\User\UserSetting\IUserSettingRepository' => \App\Repositories\User\UserSetting\UserSettingRepository::class,
      'App\Repositories\User\UserToken\IUserTokenRepository' => \App\Repositories\User\UserToken\UserTokenRepository::class,
      'App\Repositories\User\User\IUserRepository' => \App\Repositories\User\User\UserRepository::class,
      'Asm89\Stack\CorsService' => \Asm89\Stack\CorsService::class,
      'Illuminate\Cache\RateLimiter' => \Illuminate\Cache\RateLimiter::class,
      'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
      'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
      'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
      'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
      'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
      'Illuminate\Mail\Markdown' => \Illuminate\Mail\Markdown::class,
      'cache' => \Illuminate\Cache\CacheManager::class,
      'cache.store' => \Illuminate\Cache\Repository::class,
      'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
      'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
      'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
      'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
      'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
      'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
      'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
      'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
      'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
      'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
      'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
      'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
      'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
      'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
      'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
      'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
      'command.queue.batches-table' => \Illuminate\Queue\Console\BatchesTableCommand::class,
      'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
      'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
      'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
      'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
      'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
      'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
      'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
      'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
      'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
      'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
      'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
      'command.wipe' => \Illuminate\Database\Console\WipeCommand::class,
      'composer' => \Illuminate\Support\Composer::class,
      'config' => \Illuminate\Config\Repository::class,
      'db' => \Illuminate\Database\DatabaseManager::class,
      'db.connection' => \Illuminate\Database\MySqlConnection::class,
      'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
      'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
      'events' => \Illuminate\Events\Dispatcher::class,
      'files' => \Illuminate\Filesystem\Filesystem::class,
      'mail.manager' => \Illuminate\Mail\MailManager::class,
      'mailer' => \Illuminate\Mail\Mailer::class,
      'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
      'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
      'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
      'migrator' => \Illuminate\Database\Migrations\Migrator::class,
      'queue' => \Illuminate\Queue\QueueManager::class,
      'queue.connection' => \Illuminate\Queue\RedisQueue::class,
      'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
      'queue.listener' => \Illuminate\Queue\Listener::class,
      'queue.worker' => \Illuminate\Queue\Worker::class,
      'redis' => \Illuminate\Redis\RedisManager::class,
      'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
    ]));

    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

}
